\documentclass{article}
\usepackage[utf8]{inputenc}
\usepackage[margin=0.5in,top=1in,bottom=0.75in]{geometry}
\usepackage{amsmath}
\usepackage{booktabs}
\usepackage{longtable}
\usepackage{array}
\usepackage{multirow}
\usepackage[table]{xcolor}
\usepackage{wrapfig}
\usepackage{float}
\usepackage{colortbl}
\usepackage{pdflscape}
\usepackage{tabu}
\usepackage{threeparttable}
\usepackage{threeparttablex}
\usepackage[normalem]{ulem}
\usepackage{makecell}

\usepackage{multicol}
\usepackage{graphicx}

\usepackage{fancyhdr}
\pagestyle{fancy}
\lhead{Rubella notes: Nextclade}
\rhead{last update: \today}

\begin{document}

<<,echo=FALSE>>=
#opts_chunk$set(fig.width=6,fig.height=3.5,size="footnotesize",fig.align='center',cache=FALSE,echo=TRUE)
opts_chunk$set(fig.width = 6, fig.height = 3.5, size = "footnotesize", fig.align = "center", cache = FALSE, echo = FALSE, warning=FALSE, message=FALSE)
@

<<message=FALSE, warning=FALSE>>=
source("shared_functions.R")
@

\section*{Metadata check}

<<fig.width=8, fig.height=3>>=
pathogen <- "rubella"

# Download and decompress file
data_file=paste0(pathogen, "/metadata.tsv")
if (!file.exists(paste0(pathogen, "/metadata.tsv"))) {
  system(paste("mkdir -p ", pathogen, sep=""))
  file_name <- "metadata.tsv"
  zst_file <- paste0(file_name, ".zst")
  url <- paste0("https://data.nextstrain.org/files/workflows/", pathogen, "/metadata.tsv.zst")
  system(paste0("curl -L ", url, " -o ", pathogen,"/", zst_file))
  system(paste0("zstd -d ", pathogen, "/", zst_file, " -o ", pathogen, "/", file_name))
}

data <- readr::read_delim(paste0(pathogen, "/metadata.tsv"), delim="\t")
data <- readr::read_delim("~/github/nextstrain/rubella-branches/more-rubella-polish-23/ingest/results/metadata.tsv", delim="\t")
@

<<fig.width=8, fig.height=2.5>>=
diagnostic_length_plot(
  data = data,
  approx_length = 9762,
  binwidth = 200,
  percentage_y = 3000
)
@

<<fig.width=8, fig.height=4>>=
diagnostic_time_fill_plot(
  data=data,
  fill="clade",
  title="Rubella clade",
  rel_heights = c(2.5,7)
)

data %>% 
  subset(., date>"2025-12-31") %>%
  subset(., !grepl("XXXX-XX-XX", date)) %>%
  select(., accession, strain, date, date_released, date_updated) %>%
  kable(., caption = "Date check") %>%
    kable_styling(
      latex_options = c("hold_position", "striped")
    )
@

\newpage

<<>>=
NEXTCLADE='~/github/nextstrain/rubella-branches/more-rubella-polish-23/ingest/results/nextclade.tsv'

data <- readr::read_delim(NEXTCLADE, delim="\t")
@

\section*{Nextclade alignment check}

<<eval=FALSE, echo=TRUE>>=
  "alignmentParams": {
    "minSeedCover": 0.01,
    "terminalBandwidth": 100,
    "excessBandwith": 18,
    "minMatchLength": 20
  },
@

<<fig.width=8, fig.height=2>>=
result <- plot_deletions_along_genome(data, title="Frequency of deletions along rubella")

# Show the plot
result$plot
@

<<fig.width=8, fig.height=2>>=
result <- plot_insertions_along_genome(data, title="Frequency of insertions along rubella")

# Show the plot
result$plot
@

<<fig.width=8, fig.height=2>>=
# Expand deletions
expanded_frameshifts <- data %>%
  select(., frameShifts) %>%
  subset(., !is.na(frameShifts)) %>%
  separate_longer_delim(., cols = frameShifts, delim=",") %>%
  group_by(frameShifts) %>%
  summarise(
    n=n()
  ) %>%
  arrange(., desc(n) )

kable(head(expanded_frameshifts, n=10), caption = "Top Frameshifts") %>%
    kable_styling(
      latex_options = c("hold_position", "striped")
    )
@

\newpage

\noindent
\textbf{Missing Data}

<<echo=TRUE, eval=FALSE>>=
    "missingData": {
      "enabled": true,
      "missingDataThreshold": 20, # Top threshold, scale the next set of missing data from 0 to 100
      "scoreBias": 4  # First 4 not penalized
    },
@

<<fig.width=4, fig.height=1.5>>=
data %>%
  ggplot(. , aes(x=clade, y=totalMissing)) +
  geom_violin() +
  geom_boxplot(width=0.5) +
  theme_bw()

data %>%
  select(., seqName, totalMissing) %>%
  subset(., totalMissing > 20) %>%
  arrange(., desc(totalMissing)) %>%
  kable(., caption = "Records above missing threshold") %>%
    kable_styling(
      latex_options = c("hold_position", "striped")
    )
@


\noindent
\textbf{Mixed Sites (M)}

<<echo=TRUE, eval=FALSE>>=
    "mixedSites": {
      "enabled": true,
      "mixedSitesThreshold": 4  # More than this number of mixed sites results in a "bad" score
    },
@

<<fig.width=4, fig.height=1.5>>=
data %>%
  ggplot(. , aes(x=clade, y=totalNonACGTNs)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalNonACGTNs", y="")

data %>%
  select(., seqName, totalNonACGTNs) %>%
  subset(., totalNonACGTNs > 4) %>%
  arrange(., desc(totalNonACGTNs)) %>%
  kable(., caption = "Records above totalNonACGTNs threshold") %>%
    kable_styling(
      latex_options = c("hold_position", "striped")
    )
@

\newpage
\noindent
\textbf{Private Mutations}

<<echo=TRUE, eval=FALSE>>=
    "privateMutations": {
      "enabled": true,
      "cutoff": 45,
      "typical": 4,
      "weightLabeledSubstitutions": 1,
      "weightReversionSubstitutions": 1,
      "weightUnlabeledSubstitutions": 1
    },
@

<<fig.width=8, fig.height=3.5>>=
a_plot <- data %>%
  ggplot(. , aes(x=clade, y=privateNucMutations.totalLabeledSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="privateNucMutations.totalLabeledSubstitutions", y="")

b_plot <- data %>%
  ggplot(. , aes(x=clade, y=privateNucMutations.totalUnlabeledSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="privateNucMutations.totalUnlabeledSubstitutions", y="")

c_plot <- data %>%
  ggplot(. , aes(x=clade, y=privateNucMutations.totalReversionSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="privateNucMutations.totalReversionSubstitutions", y="")

d_plot <- data %>%
  ggplot(. , aes(x=clade, y=privateNucMutations.totalPrivateSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="privateNucMutations.totalPrivateSubstitutions", y="")

cowplot::plot_grid(a_plot, b_plot, c_plot, d_plot, ncol=2)
@

\noindent
\textbf{Mutation clusters}

<<eval=FALSE, echo=TRUE>>=
    "snpClusters": {
      "enabled": true,
      "clusterCutOff": 10,
      "scoreWeight": 50,
      "windowSize": 50
    }
@

<<fig.width=8, fig.height=3.5>>=
a_plot <- data %>%
  ggplot(. , aes(x=clade, y=totalSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalSubstitutions", y="")
b_plot <- data %>%
  ggplot(. , aes(x=clade, y=totalAminoacidSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalAminoacidSubstitutions", y="")
c_plot <- data %>%
  ggplot(. , aes(x=clade, y=totalAminoacidInsertions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalAminoacidInsertions", y="")
d_plot <- data %>%
  ggplot(. , aes(x=clade, y=totalAminoacidDeletions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalAminoacidDeletions", y="")
cowplot::plot_grid(a_plot, b_plot, c_plot, d_plot, ncol=2)
@


\newpage
\noindent
\textbf{Stop Codons}

<<eval=FALSE,echo=TRUE>>=
# Example, not set in rubella
"stopCodons": {
      "enabled": true,
      "ignoredStopCodons": [
        {
          "geneName": "ORF8",
          "codon": 26
        },
        {
          "geneName": "ORF8",
          "codon": 67
        }
      ]
}
@

<<fig.width=8, fig.height=2>>=
data %>%
  ggplot(. , aes(x=clade, y=qc.stopCodons.totalStopCodons)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="qc.stopCodons.totalStopCodons", y="")
@


\noindent
\textbf{Frameshifts}

<<eval=FALSE,echo=TRUE>>=
    "frameShifts": {
      "enabled": true,
      # Example known frame shifts, enabled in rubella but no ignored ones set
      "ignoredFrameShifts": [
        {
          "geneName": "ORF3a",
          "codonRange": {
            "begin": 256,
            "end": 276
          }
        },
        {
          "geneName": "ORF3a",
          "codonRange": {
            "begin": 258,
            "end": 276
          }
        }
      ]
    },
@

<<fig.width=8, fig.height=2>>=
data %>%
  ggplot(. , aes(x=clade, y=totalFrameShifts)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalFrameShifts", y="")

# Expand deletions
expanded_frameshifts <- data %>%
  select(., frameShifts) %>%
  subset(., !is.na(frameShifts)) %>%
  separate_longer_delim(., cols = frameShifts, delim=",") %>%
  group_by(frameShifts) %>%
  summarise(
    n=n()
  ) %>%
  arrange(., desc(n) )

kable(head(expanded_frameshifts, n=10), caption = "Top Frameshifts") %>%
    kable_styling(
      latex_options = c("hold_position", "striped")
    )

data %>%
  select(., seqName, frameShifts) %>%
  subset(., grepl("E1:290-481", frameShifts)) %>%
  kable(., caption = "Records with top frameShifts") %>%
    kable_styling(
      latex_options = c("hold_position", "striped")
    )
@

\end{document}