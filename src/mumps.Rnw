\documentclass{article}
\usepackage[utf8]{inputenc}
\usepackage[margin=0.5in,top=1in,bottom=0.75in]{geometry}
\usepackage{amsmath}
\usepackage{booktabs}
\usepackage{longtable}
\usepackage{array}
\usepackage{multirow}
\usepackage[table]{xcolor}
\usepackage{wrapfig}
\usepackage{float}
\usepackage{colortbl}
\usepackage{pdflscape}
\usepackage{tabu}
\usepackage{threeparttable}
\usepackage{threeparttablex}
\usepackage[normalem]{ulem}
\usepackage{makecell}

\usepackage{multicol}
\usepackage{graphicx}

\usepackage{fancyhdr}
\pagestyle{fancy}
\lhead{Mumps notes}
\rhead{last update: \today}

\begin{document}

<<,echo=FALSE>>=
#opts_chunk$set(fig.width=6,fig.height=3.5,size="footnotesize",fig.align='center',cache=FALSE,echo=TRUE)
opts_chunk$set(fig.width = 6, fig.height = 3.5, size = "footnotesize", fig.align = "center", cache = FALSE, echo = FALSE, warning=FALSE, message=FALSE)
@

<<message=FALSE, warning=FALSE>>=
source("shared_functions.R")
@

\section*{Background}

\section*{Exploratory Graphics}

<<fig.width=8, fig.height=3>>=
pathogen <- "mumps"

# Download and decompress file
data_file=paste0(pathogen, "/metadata.tsv")
if (!file.exists(paste0(pathogen, "/metadata.tsv"))) {
  system(paste("mkdir -p ", pathogen, sep=""))
  file_name <- "metadata.tsv"
  zst_file <- paste0(file_name, ".zst")
  url <- paste0("https://data.nextstrain.org/files/workflows/", pathogen, "/metadata.tsv.zst")
  system(paste0("curl -L ", url, " -o ", pathogen,"/", zst_file))
  system(paste0("zstd -d ", pathogen, "/", zst_file, " -o ", pathogen, "/", file_name))
}

data <- readr::read_delim(paste0(pathogen, "/metadata.tsv"), delim="\t")
@

\section*{NCBI GenBank records}

<<fig.width=8, fig.height=2.5>>=
diagnostic_length_plot(
  data = data,
  approx_length = 15384,
  binwidth = 200,
  percentage_y = 9000
)
@

<<fig.width=8, fig.height=4>>=
diagnostic_time_fill_plot(
  data=data,
  fill="region"
)
@

<<fig.width=8, fig.height=4>>=
diagnostic_time_fill_plot(
  data=data,
  fill="MuV_genotype",
  title="MuV Genotype",
  rel_heights = c(2.5,7)
)
@

<<fig.width=8, fig.height=4>>=
diagnostic_time_fill_plot(
  data=data,
  fill="MuV_genotype_nextclade_sh",
  title="MuV Genotype_nextclade_sh",
  rel_heights = c(2.5,7)
)
@

<<fig.width=8, fig.height=4>>=
diagnostic_time_fill_plot(
  data=data,
  fill="MuV_genotype_nextclade_genome",
  title="MuV Genotype_nextclade_genome",
  rel_heights = c(2.5,7)
)
@

<<fig.width=8, fig.height=4>>=
diagnostic_time_fill_plot(
  data=data,
  fill="MuV_genotype_nextclade_genomesample",
  title="MuV Genotype_nextclade_genomesample",
  rel_heights = c(2.5,7)
)
@

\newpage
\section*{Nextclade dataset}

<<fig.width=5, fig.height=5>>=
# Pivot Table comparing MuV_genotype and MuV_genotype_nextclade columns
pivot <- data %>%
  count(MuV_genotype, MuV_genotype_nextclade_sh) %>%
  complete(MuV_genotype, MuV_genotype_nextclade_sh, fill = list(n = 0)) %>%
  mutate(
    log_n = ifelse(n > 0, log10(n), NA),
    MuV_genotype = case_when(is.na(MuV_genotype) ~ "NA",
                             TRUE ~ MuV_genotype),
    MuV_genotype = fct_rev(factor(MuV_genotype))
  )

# Plot
ggplot(pivot, aes(x = MuV_genotype_nextclade_sh, y = MuV_genotype, fill = log_n)) +
  geom_tile(color = "white") +
  geom_text(aes(label = ifelse(n > 0, as.character(n), "")), color = "black", size = 3) +
  scale_fill_gradient(
    low = "white", high = "orange",
    na.value = "white"
  ) +
  scale_y_discrete(name = "Original MuV Genotype from GenBank") +
  scale_x_discrete(name = "Nextclade MuV Genotype SH results", position = "top") +
  theme_minimal() +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 0, vjust = 0.5),
  )
@

<<>>=
mismatch <- data %>%
  subset(MuV_genotype != MuV_genotype_nextclade_sh) %>%
  subset(!(MuV_genotype %in% c("G1", "G2") & MuV_genotype_nextclade_sh %in% c("G"))) %>%
  subset(!(MuV_genotype %in% c("H1", "H2") & MuV_genotype_nextclade_sh %in% c("H"))) %>%
  subset(!(MuV_genotype %in% c("K/M", "M") & MuV_genotype_nextclade_sh %in% c("K"))) %>%
  select(c("accession", "strain","length", "genotype", "MuV_genotype", "MuV_genotype_nextclade_sh")) %>%
  rename(., SH=MuV_genotype_nextclade_sh ) %>%
  arrange(MuV_genotype)

kable(mismatch, caption = "Mismatched Genotype between GenBank and Nextclade datasets") %>%
    kable_styling(
      latex_options = c("hold_position", "striped")
    )

readr::write_delim(mismatch, file="mumps/mismatch_sh.tsv", delim="\t")
@


<<fig.width=5, fig.height=5>>=
# Pivot Table comparing MuV_genotype and MuV_genotype_nextclade columns
pivot <- data %>%
  count(MuV_genotype, MuV_genotype_nextclade_genome) %>%
  complete(MuV_genotype, MuV_genotype_nextclade_genome, fill = list(n = 0)) %>%
  mutate(
    log_n = ifelse(n > 0, log10(n), NA),
    MuV_genotype = case_when(is.na(MuV_genotype) ~ "NA",
                             TRUE ~ MuV_genotype),
    MuV_genotype = fct_rev(factor(MuV_genotype))
  )

# Plot
ggplot(pivot, aes(x = MuV_genotype_nextclade_genome, y = MuV_genotype, fill = log_n)) +
  geom_tile(color = "white") +
  geom_text(aes(label = ifelse(n > 0, as.character(n), "")), color = "black", size = 3) +
  scale_fill_gradient(
    low = "white", high = "orange",
    na.value = "white"
  ) +
  scale_y_discrete(name = "Original MuV Genotype from GenBank") +
  scale_x_discrete(name = "Nextclade MuV Genotype Genome results", position = "top") +
  theme_minimal() +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 0, vjust = 0.5),
  )
@

<<>>=
mismatch <- data %>%
  subset(MuV_genotype != MuV_genotype_nextclade_genome) %>%
  subset(!(MuV_genotype %in% c("G1", "G2") & MuV_genotype_nextclade_genome %in% c("G"))) %>%
  subset(!(MuV_genotype %in% c("H1", "H2") & MuV_genotype_nextclade_genome %in% c("H"))) %>%
  subset(!(MuV_genotype %in% c("K/M", "M") & MuV_genotype_nextclade_genome %in% c("K"))) %>%
  select(c("accession", "strain","length", "MuV_genotype",  "MuV_genotype_nextclade_sh", "MuV_genotype_nextclade_genome")) %>%
  arrange(MuV_genotype) %>%
  rename(., SH=MuV_genotype_nextclade_sh, Genome=MuV_genotype_nextclade_genome) 

kable(head(mismatch, n=10), caption = "Mismatched Genotype between GenBank and Nextclade datasets") %>%
    kable_styling(
      latex_options = c("hold_position", "striped")
    )

readr::write_delim(mismatch, file="mumps/mismatch_genome.tsv", delim="\t")
@



<<fig.width=5, fig.height=5>>=
# Pivot Table comparing MuV_genotype and MuV_genotype_nextclade columns
pivot <- data %>%
  count(MuV_genotype, MuV_genotype_nextclade_genomesample) %>%
  complete(MuV_genotype, MuV_genotype_nextclade_genomesample, fill = list(n = 0)) %>%
  mutate(
    log_n = ifelse(n > 0, log10(n), NA),
    MuV_genotype = case_when(is.na(MuV_genotype) ~ "NA",
                             TRUE ~ MuV_genotype),
    MuV_genotype = fct_rev(factor(MuV_genotype))
  )

# Plot
ggplot(pivot, aes(x = MuV_genotype_nextclade_genomesample, y = MuV_genotype, fill = log_n)) +
  geom_tile(color = "white") +
  geom_text(aes(label = ifelse(n > 0, as.character(n), "")), color = "black", size = 3) +
  scale_fill_gradient(
    low = "white", high = "orange",
    na.value = "white"
  ) +
  scale_y_discrete(name = "Original MuV Genotype from GenBank") +
  scale_x_discrete(name = "Nextclade MuV Genotype Genome Sampled results", position = "top") +
  theme_minimal() +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 0, vjust = 0.5),
  )
@

<<>>=
mismatch <- data %>%
  subset(MuV_genotype != MuV_genotype_nextclade_genomesample) %>%
  subset(!(MuV_genotype %in% c("G1", "G2") & MuV_genotype_nextclade_genomesample %in% c("G"))) %>%
  subset(!(MuV_genotype %in% c("H1", "H2") & MuV_genotype_nextclade_genomesample %in% c("H"))) %>%
  subset(!(MuV_genotype %in% c("K/M", "M") & MuV_genotype_nextclade_genomesample %in% c("K"))) %>%
  select(c("accession", "strain","length", "MuV_genotype", "MuV_genotype_nextclade_sh", "MuV_genotype_nextclade_genome", "MuV_genotype_nextclade_genomesample")) %>%
  rename(., SH=MuV_genotype_nextclade_sh, Genome=MuV_genotype_nextclade_genome, GenomeSample=MuV_genotype_nextclade_genomesample ) %>%
  arrange(MuV_genotype) 

kable(head(mismatch, n=10), caption = "Mismatched Genotype between GenBank and Nextclade datasets") %>%
    kable_styling(
      latex_options = c("hold_position", "striped")
    )

readr::write_delim(mismatch, file="mumps/mismatch_genomesample.tsv", delim="\t")

@


\newpage

\section*{Debugging Nextclade Assignments}

<<eval=FALSE, echo=TRUE>>=
nextstrain shell .

#export BUILD=sh
#export METADATA_COLUMNS="strain,MuV_genotype,SH,length"
#export BUILD=genome
#export METADATA_COLUMNS="strain,MuV_genotype,SH,Genome,length"
export BUILD=genomesample
export METADATA_COLUMNS="strain,MuV_genotype,SH,Genome,GenomeSample,length"

augur filter \
  --metadata mumps/mismatch_${BUILD}.tsv \
  --metadata-id-columns accession \
  --sequences ~/Desktop/MUMPS/mumps/ingest/results/sequences.fasta \
  --output-sequences mumps/mismatch_${BUILD}_raw.fasta

python ~/github/j23414/basic-phylogenetic-pipeline/bin/annotate_header.py \
  --metadata mumps/mismatch_${BUILD}.tsv \
  --metadata-columns ${METADATA_COLUMNS} \
  --sequences mumps/mismatch_${BUILD}_raw.fasta \
  > mumps/mismatch_${BUILD}.fasta

nextclade3 run \
  mumps/mismatch_${BUILD}.fasta \
  --input-dataset ~/github/nextstrain/mumps-branches/add-nextclade-workflow-wgs/nextclade_data/${BUILD} \
  --output-tsv mumps/nextclade_${BUILD}.tsv \
  --output-fasta mumps/nextclade_${BUILD}.fasta \
  --silent
@

\includegraphics[width=1\textwidth]{mumps/2025-05-20_geneious_nextclade_genomesample.png}

\begin{itemize}
\item{Mis-assignments seem to be in the gap between V/P and M gene (weird indel), SH region for Genotype I, and HN gene.}
\item{Dragged mis-assignments onto Nextclade tree, see figures below}
\end{itemize}

\includegraphics[width=1\textwidth]{mumps/false_A.png}

<<>>=
one <- data %>%
  subset(grepl("MuVs/Middelburg.NLD/33.18", strain)) %>%
  select(c("accession", "strain","length", "MuV_genotype", "MuV_genotype_nextclade_sh", "MuV_genotype_nextclade_genome", "MuV_genotype_nextclade_genomesample")) %>%
  rename(., SH=MuV_genotype_nextclade_sh, Genome=MuV_genotype_nextclade_genome, GenomeSample=MuV_genotype_nextclade_genomesample ) %>%
  arrange(length)

kable(one, caption = "For same strain, different segment genotype calls") %>%
    kable_styling(
      latex_options = c("hold_position", "striped")
    )
@

\includegraphics[width=1\textwidth]{mumps/one.png}

<<>>=
two <- data %>%
  subset(grepl("MuVs/Gelderland.NLD/32.19", strain)) %>%
  select(c("accession", "strain","length", "MuV_genotype", "MuV_genotype_nextclade_sh", "MuV_genotype_nextclade_genome", "MuV_genotype_nextclade_genomesample")) %>%
  rename(., SH=MuV_genotype_nextclade_sh, Genome=MuV_genotype_nextclade_genome, GenomeSample=MuV_genotype_nextclade_genomesample ) %>%
  arrange(length)

kable(two, caption = "For same strain, different segment genotype calls") %>%
    kable_styling(
      latex_options = c("hold_position", "striped")
    )
@

\includegraphics[width=1\textwidth]{mumps/two.png}

\newpage
\newpage

\section* {Add an outgroup}


<<fig.width=5, fig.height=5>>=
# Pivot Table comparing MuV_genotype and MuV_genotype_nextclade columns
pivot <- data %>%
  count(MuV_genotype, MuV_genotype_nextclade_genomesampleoutgroup) %>%
  complete(MuV_genotype, MuV_genotype_nextclade_genomesampleoutgroup, fill = list(n = 0)) %>%
  mutate(
    log_n = ifelse(n > 0, log10(n), NA),
    MuV_genotype = case_when(is.na(MuV_genotype) ~ "NA",
                             TRUE ~ MuV_genotype),
    MuV_genotype = fct_rev(factor(MuV_genotype))
  )

# Plot
ggplot(pivot, aes(x = MuV_genotype_nextclade_genomesampleoutgroup, y = MuV_genotype, fill = log_n)) +
  geom_tile(color = "white") +
  geom_text(aes(label = ifelse(n > 0, as.character(n), "")), color = "black", size = 3) +
  scale_fill_gradient(
    low = "white", high = "orange",
    na.value = "white"
  ) +
  scale_y_discrete(name = "Original MuV Genotype from GenBank") +
  scale_x_discrete(name = "Nextclade MuV Genotype Genome Sampled with Outgroup results", position = "top") +
  theme_minimal() +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0),
  )
@

<<>>=
mismatch <- data %>%
  subset(MuV_genotype != MuV_genotype_nextclade_genomesampleoutgroup) %>%
  subset(!(MuV_genotype %in% c("G1", "G2") & MuV_genotype_nextclade_genomesampleoutgroup %in% c("G"))) %>%
  subset(!(MuV_genotype %in% c("H1", "H2") & MuV_genotype_nextclade_genomesampleoutgroup %in% c("H"))) %>%
  subset(!(MuV_genotype %in% c("K/M", "M") & MuV_genotype_nextclade_genomesampleoutgroup %in% c("K"))) %>%
  select(c("accession", "strain","length", "MuV_genotype", "MuV_genotype_nextclade_sh", "MuV_genotype_nextclade_genome", "MuV_genotype_nextclade_genomesample", "MuV_genotype_nextclade_genomesampleoutgroup")) %>%
  rename(., SH=MuV_genotype_nextclade_sh, Genome=MuV_genotype_nextclade_genome, GenomeSample=MuV_genotype_nextclade_genomesample, GenomeSampleOutgroup=MuV_genotype_nextclade_genomesampleoutgroup ) %>%
  arrange(MuV_genotype) 

kable(mismatch, caption = "Mismatched Genotype between GenBank and Nextclade datasets") %>%
    kable_styling(
      latex_options = c("hold_position", "striped")
    )

readr::write_delim(mismatch, file="mumps/mismatch_genomesampleoutgroup.tsv", delim="\t")

@

\newpage

<<fig.width=8, fig.height=3>>=
top_x_author_table(
  data=data,
  top_x=25,
  authors="authors"
)
@

<<fig.width=8, fig.height=3>>=
earliest_records_table(
  data=data,
  first=20,
  date="date",
  other_fields="accession strain country authors"
)
@

<<fig.width=8, fig.height=3>>=
latest_records_table(
  data=data,
  last=20,
  date="date",
  other_fields="accession strain country authors"
)
@

\end{document}