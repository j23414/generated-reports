\documentclass{article}
\usepackage[utf8]{inputenc}
\usepackage[margin=0.5in,top=1in,bottom=0.75in]{geometry}
\usepackage{amsmath}
\usepackage{booktabs}
\usepackage{longtable}
\usepackage{array}
\usepackage{multirow}
\usepackage[table]{xcolor}
\usepackage{wrapfig}
\usepackage{float}
\usepackage{colortbl}
\usepackage{pdflscape}
\usepackage{tabu}
\usepackage{threeparttable}
\usepackage{threeparttablex}
\usepackage[normalem]{ulem}
\usepackage{makecell}
\usepackage{hyperref}

\usepackage{multicol}
\usepackage{graphicx}

\usepackage{fancyhdr}
\pagestyle{fancy}
\lhead{Mumps notes: Nextclade}
\rhead{last update: \today}

\begin{document}

<<,echo=FALSE>>=
#opts_chunk$set(fig.width=6,fig.height=3.5,size="footnotesize",fig.align='center',cache=FALSE,echo=TRUE)
opts_chunk$set(fig.width = 6, fig.height = 3.5, size = "footnotesize", fig.align = "center", cache = FALSE, echo = FALSE, warning=FALSE, message=FALSE)
@

<<message=FALSE, warning=FALSE>>=
source("shared_functions.R")
@

\section*{Nextclade Result Parameter Diagnostic Plots}

<<fig.width=8, fig.height=3>>=
pathogen <- "mumps"

# Download and decompress file
data_file=paste0(pathogen, "/metadata.tsv")
if (!file.exists(paste0(pathogen, "/metadata.tsv"))) {
  system(paste("mkdir -p ", pathogen, sep=""))
  file_name <- "metadata.tsv"
  zst_file <- paste0(file_name, ".zst")
  url <- paste0("https://data.nextstrain.org/files/workflows/", pathogen, "/metadata.tsv.zst")
  system(paste0("curl -L ", url, " -o ", pathogen,"/", zst_file))
  system(paste0("zstd -d ", pathogen, "/", zst_file, " -o ", pathogen, "/", file_name))
}

data <- readr::read_delim(paste0(pathogen, "/metadata.tsv"), delim="\t")
@

\subsection*{Full Genome}

<<fig.width=8, fig.height=2>>=
diagnostic_length_plot(
  data = data,
  approx_length = 15384,
  binwidth = 200,
  percentage_y = 9000
)
@

\subsection*{SH Region}

<<fig.width=8, fig.height=2>>=
diagnostic_length_plot(
  data = data %>% subset(length<500),
  approx_length = 315,
  binwidth = 20,
  percentage_y = 9000
)
@

\section*{Nextclade compared with GenBank annotations:}

<<fig.width=8, fig.height=4>>=
# Pivot Table comparing MuV_genotype and MuV_genotype_nextclade columns
pivot <- data %>%
  count(MuV_genotype, MuV_genotype_nextclade_sh) %>%
  complete(MuV_genotype, MuV_genotype_nextclade_sh, fill = list(n = 0)) %>%
  mutate(
    log_n = ifelse(n > 0, log10(n), NA),
    MuV_genotype = case_when(is.na(MuV_genotype) ~ "NA",
                             TRUE ~ MuV_genotype),
    MuV_genotype = fct_rev(factor(MuV_genotype))
  )

# Plot
sh_plot <- ggplot(pivot, aes(x = MuV_genotype_nextclade_sh, y = MuV_genotype, fill = log_n)) +
  geom_tile(color = "white") +
  geom_text(aes(label = ifelse(n > 0, as.character(n), "")), color = "black", size = 3) +
  scale_fill_gradient(
    low = "white", high = "orange",
    na.value = "white"
  ) +
  scale_y_discrete(name = "Original MuV Genotype from GenBank") +
  scale_x_discrete(name = "Nextclade MuV Genotype SH results", position = "top") +
  theme_minimal() +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0),
  )


# Pivot Table comparing MuV_genotype and MuV_genotype_nextclade columns
pivot <- data %>%
  count(MuV_genotype, MuV_genotype_nextclade_genome) %>%
  complete(MuV_genotype, MuV_genotype_nextclade_genome, fill = list(n = 0)) %>%
  mutate(
    log_n = ifelse(n > 0, log10(n), NA),
    MuV_genotype = case_when(is.na(MuV_genotype) ~ "NA",
                             TRUE ~ MuV_genotype),
    MuV_genotype = fct_rev(factor(MuV_genotype))
  )

# Plot
genome_plot <- ggplot(pivot, aes(x = MuV_genotype_nextclade_genome, y = MuV_genotype, fill = log_n)) +
  geom_tile(color = "white") +
  geom_text(aes(label = ifelse(n > 0, as.character(n), "")), color = "black", size = 3) +
  scale_fill_gradient(
    low = "white", high = "orange",
    na.value = "white"
  ) +
  scale_y_discrete(name = "Original MuV Genotype from GenBank") +
  scale_x_discrete(name = "Nextclade MuV Genotype Genome results", position = "top") +
  theme_minimal() +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0),
  )

cowplot::plot_grid(sh_plot, genome_plot, ncol=2)
@

\newpage

\section*{SH gene Nextclade Dataset}

<<fig.width=4, fig.height=2>>=
SH_NEXTCLADE='~/Desktop/debug/fixup-config-and-logs/ingest/results/sh/nextclade.tsv'

data <- readr::read_delim(SH_NEXTCLADE, delim="\t")
@


\section*{Alignment check}

\href{https://clades.nextstrain.org?dataset-url=https://github.com/nextstrain/mumps/tree/main/nextclade_data/sh&input-fasta=https://raw.githubusercontent.com/nextstrain/mumps/refs/heads/main/nextclade_data/sh/sequences.fasta}{Mumps/SH/example}

<<fig.width=8, fig.height=2>>=
result <- plot_deletions_along_genome(data, title="Frequency of deletions along SH")

# Show the plot
result$plot
@

<<fig.width=8, fig.height=2>>=
result <- plot_insertions_along_genome(data, title="Frequency of insertions along SH")

# Show the plot
result$plot
@


<<fig.width=8, fig.height=2>>=
# Expand deletions
expanded_frameshifts <- data %>%
  select(., frameShifts) %>%
  subset(., !is.na(frameShifts)) %>%
  separate_longer_delim(., cols = frameShifts, delim=",") %>%
  group_by(frameShifts) %>%
  summarise(
    n=n()
  ) %>%
  arrange(., desc(n) )

kable(head(expanded_frameshifts, n=10), caption = "Top Frameshifts") %>%
    kable_styling(
      latex_options = c("hold_position", "striped")
    )
@

\noindent
\textbf{Missing Data}

<<echo=TRUE, eval=FALSE>>=
--scoreBias 300                # First 300 not penalized
--missingDataThreshold 3000    # Top threshold, scale the next set of missing data from 0 to 100
@

<<fig.width=4, fig.height=2>>=
data %>%
  ggplot(. , aes(x=clade, y=totalMissing)) +
  geom_violin() +
  geom_boxplot(width=0.5) +
  theme_bw()
@

\noindent
Since this is the SH gene (~315nt), we do not reach past the 300 minimum.

\noindent
\textbf{Mixed Sites (M)}

<<echo=TRUE, eval=FALSE>>=
--mixedSitesThreshold 10 # More than this number of mixed sites results in a "bad" score
@

<<fig.width=4, fig.height=1.5>>=
data %>%
  ggplot(. , aes(x=clade, y=totalNonACGTNs)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalNonACGTNs", y="")
@

\noindent
Well below the 10 threshold (but once again this is for a reference that is 315nt long).

\newpage
\noindent
\textbf{Private Mutations}

<<echo=TRUE, eval=FALSE>>=
    "privateMutations": {
      "enabled": true,
      "typical": 8,
      "cutoff": 24,
      "weightLabeledSubstitutions": 4,
      "weightReversionSubstitutions": 6,
      "weightUnlabeledSubstitutions": 1
    },
@

<<fig.width=8, fig.height=3.5>>=
a_plot <- data %>%
  ggplot(. , aes(x=clade, y=privateNucMutations.totalLabeledSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="privateNucMutations.totalLabeledSubstitutions", y="")

b_plot <- data %>%
  ggplot(. , aes(x=clade, y=privateNucMutations.totalUnlabeledSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="privateNucMutations.totalUnlabeledSubstitutions", y="")

c_plot <- data %>%
  ggplot(. , aes(x=clade, y=privateNucMutations.totalReversionSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="privateNucMutations.totalReversionSubstitutions", y="")

d_plot <- data %>%
  ggplot(. , aes(x=clade, y=privateNucMutations.totalPrivateSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="privateNucMutations.totalPrivateSubstitutions", y="")

cowplot::plot_grid(a_plot, b_plot, c_plot, d_plot, ncol=2)
@

\noindent
\textbf{Mutation clusters}

<<eval=FALSE, echo=TRUE>>=
    "snpClusters": {
      "enabled": true,
      "windowSize": 100,
      "clusterCutOff": 6,
      "scoreWeight": 50
    },
@

<<fig.width=8, fig.height=3.5>>=
a_plot <- data %>%
  ggplot(. , aes(x=clade, y=totalSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalSubstitutions", y="")
b_plot <- data %>%
  ggplot(. , aes(x=clade, y=totalAminoacidSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalAminoacidSubstitutions", y="")
c_plot <- data %>%
  ggplot(. , aes(x=clade, y=totalAminoacidInsertions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalAminoacidInsertions", y="")
d_plot <- data %>%
  ggplot(. , aes(x=clade, y=totalAminoacidDeletions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalAminoacidDeletions", y="")
cowplot::plot_grid(a_plot, b_plot, c_plot, d_plot, ncol=2)
@


\newpage
\noindent
\textbf{Stop Codons}

<<eval=FALSE,echo=TRUE>>=
"stopCodons": {
      "enabled": true,
      "ignoredStopCodons": [
        {
          "geneName": "ORF8",
          "codon": 26
        },
        {
          "geneName": "ORF8",
          "codon": 67
        }
      ]
}
@

<<fig.width=8, fig.height=2>>=
data %>%
  ggplot(. , aes(x=clade, y=qc.stopCodons.totalStopCodons)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="qc.stopCodons.totalStopCodons", y="")
@


\noindent
\textbf{Frameshifts}

<<eval=FALSE,echo=TRUE>>=
    "frameShifts": {
      "enabled": true,
      "ignoredFrameShifts": [
        {
          "geneName": "ORF3a",
          "codonRange": {
            "begin": 256,
            "end": 276
          }
        },
        {
          "geneName": "ORF3a",
          "codonRange": {
            "begin": 258,
            "end": 276
          }
        }
      ]
    },
@

<<fig.width=8, fig.height=2>>=
data %>%
  ggplot(. , aes(x=clade, y=totalFrameShifts)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalFrameShifts", y="")
@


\newpage

\section*{Genome Nextclade Dataset}

<<fig.width=4, fig.height=2>>=
SH_NEXTCLADE='~/Desktop/debug/fixup-config-and-logs/ingest/results/genome/nextclade.tsv'

data <- readr::read_delim(SH_NEXTCLADE, delim="\t")
@


\section*{Alignment check}

\href{https://clades.nextstrain.org?dataset-url=https://github.com/nextstrain/mumps/tree/main/nextclade_data/genome&input-fasta=https://raw.githubusercontent.com/nextstrain/mumps/refs/heads/main/nextclade_data/genome/sequences.fasta}{Mumps/Genome/example}

<<fig.width=8, fig.height=2>>=
result <- plot_deletions_along_genome(data, title="Frequency of deletions along Genome", binwidth = 100)

# Show the plot
result$plot
@

<<fig.width=8, fig.height=2>>=
result <- plot_insertions_along_genome(data, title="Frequency of insertions along Genome", binwidth = 100)

# Show the plot
result$plot
@


<<fig.width=8, fig.height=2>>=
# Expand deletions
expanded_frameshifts <- data %>%
  select(., frameShifts) %>%
  subset(., !is.na(frameShifts)) %>%
  separate_longer_delim(., cols = frameShifts, delim=",") %>%
  group_by(frameShifts) %>%
  summarise(
    n=n()
  ) %>%
  arrange(., desc(n) )

kable(head(expanded_frameshifts, n=10), caption = "Top Frameshifts") %>%
    kable_styling(
      latex_options = c("hold_position", "striped")
    )
@

\noindent
\textbf{Missing Data}

<<echo=TRUE, eval=FALSE>>=
--scoreBias 300                # First 300 not penalized
--missingDataThreshold 3000    # Top threshold, scale the next set of missing data from 0 to 100
@

<<fig.width=4, fig.height=2>>=
SH_NEXTCLADE='~/Desktop/debug/fixup-config-and-logs/ingest/results/genome/nextclade.tsv'

data <- readr::read_delim(SH_NEXTCLADE, delim="\t")

# names(data)

data %>%
  ggplot(. , aes(x=clade, y=totalMissing)) +
  geom_violin() +
  geom_boxplot(width=0.5) +
  theme_bw()
@

\noindent
The full genome does reach the 300 minimum, especially for samples that are only reporting one gene (SH region or 315 out of 14k genome length)

\noindent
\textbf{Mixed Sites (M)}

<<echo=TRUE, eval=FALSE>>=
--mixedSitesThreshold 10 # More than this number of mixed sites results in a "bad" score
@

<<fig.width=4, fig.height=1.5>>=
data %>%
  ggplot(. , aes(x=clade, y=totalNonACGTNs)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalNonACGTNs", y="")
@

\noindent
This is still well below the 10 threshold.

\newpage
\noindent
\textbf{Private Mutations}

<<echo=TRUE, eval=FALSE>>=
    "privateMutations": {
      "enabled": true,
      "typical": 8,
      "cutoff": 24,
      "weightLabeledSubstitutions": 4,
      "weightReversionSubstitutions": 6,
      "weightUnlabeledSubstitutions": 1
    },
@

<<fig.width=8, fig.height=3.5>>=
a_plot <- data %>%
  ggplot(. , aes(x=clade, y=privateNucMutations.totalLabeledSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="privateNucMutations.totalLabeledSubstitutions", y="")

b_plot <- data %>%
  ggplot(. , aes(x=clade, y=privateNucMutations.totalUnlabeledSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="privateNucMutations.totalUnlabeledSubstitutions", y="")

c_plot <- data %>%
  ggplot(. , aes(x=clade, y=privateNucMutations.totalReversionSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="privateNucMutations.totalReversionSubstitutions", y="")

d_plot <- data %>%
  ggplot(. , aes(x=clade, y=privateNucMutations.totalPrivateSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="privateNucMutations.totalPrivateSubstitutions", y="")

cowplot::plot_grid(a_plot, b_plot, c_plot, d_plot, ncol=2)
@

\noindent
\textbf{Mutation clusters}

<<eval=FALSE, echo=TRUE>>=
    "snpClusters": {
      "enabled": true,
      "windowSize": 100,
      "clusterCutOff": 6,
      "scoreWeight": 50
    },
@

<<fig.width=8, fig.height=3.5>>=
a_plot <- data %>%
  ggplot(. , aes(x=clade, y=totalSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalSubstitutions", y="")
b_plot <- data %>%
  ggplot(. , aes(x=clade, y=totalAminoacidSubstitutions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalAminoacidSubstitutions", y="")
c_plot <- data %>%
  ggplot(. , aes(x=clade, y=totalAminoacidInsertions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalAminoacidInsertions", y="")
d_plot <- data %>%
  ggplot(. , aes(x=clade, y=totalAminoacidDeletions)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalAminoacidDeletions", y="")
cowplot::plot_grid(a_plot, b_plot, c_plot, d_plot, ncol=2)
@


\newpage
\noindent
\textbf{Stop Codons}

<<eval=FALSE,echo=TRUE>>=
"stopCodons": {
      "enabled": true,
      "ignoredStopCodons": [
        {
          "geneName": "ORF8",
          "codon": 26
        },
        {
          "geneName": "ORF8",
          "codon": 67
        }
      ]
}
@

<<fig.width=8, fig.height=2>>=
data %>%
  ggplot(. , aes(x=clade, y=qc.stopCodons.totalStopCodons)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="qc.stopCodons.totalStopCodons", y="")
@


\noindent
\textbf{Frameshifts}

<<eval=FALSE,echo=TRUE>>=
    "frameShifts": {
      "enabled": true,
      "ignoredFrameShifts": [
        {
          "geneName": "ORF3a",
          "codonRange": {
            "begin": 256,
            "end": 276
          }
        },
        {
          "geneName": "ORF3a",
          "codonRange": {
            "begin": 258,
            "end": 276
          }
        }
      ]
    },
@

<<fig.width=8, fig.height=2>>=
data %>%
  ggplot(. , aes(x=clade, y=totalFrameShifts)) +
  geom_violin() +
  geom_boxplot() +
  theme_bw() +
  labs(title="totalFrameShifts", y="")
@




\end{document}